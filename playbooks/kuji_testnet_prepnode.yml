- hosts: kuji_testnet
  name: Create user with password and ssh key
  remote_user: root
  tasks:
    - import_role:
        name: user
      vars:
        user_name: '{{ kuji_testnet.username }}'
        user_password: "{{ ansible_become_pass | password_hash('sha512') }}"
        user_ssh_key_save_path: '{{ kuji_testnet.sshkey_save_path }}'
        user_ssh_key_file: '.ssh/{{ kuji_testnet.username }}_id_rsa'
  ignore_errors: yes
  ignore_unreachable: yes

- name: Evaluating the authentication agent & adding the key...
  hosts: localhost
  connection: local
  tasks:
    - import_role:
        name: sshadd
      vars:
        sshadd_key_path:  '{{ kuji_testnet.sshkey_save_path }}/{{ kuji_testnet.username }}_id_rsa'

- name: Tune SSH, install packages, golang, set FW
  hosts: kuji_testnet
  remote_user: '{{ kuji_testnet.username }}'
  become: yes
  tasks:
    - import_role:
        name: apt
    - import_role:
        name: ssh
      vars:
        username: '{{ kuji_testnet.username }}'
    - import_role:
        name: gantsign.golang
      vars:
        golang_gopath: '/home/{{ kuji_testnet.username }}/go'
    - import_role:
        name: firewall # also allow non-standard SSH port
      vars:
        firewall_rules:
        - rule: allow
          port: 26650:26670
          proto: tcp
        - rule: allow
          port: 9300
        - rule: allow
          port: 9100

- name: Generate TLS cert
  hosts: localhost
  connection: local
  tasks:
    - import_role:
        name: tlsgen
      vars:
        tlsgen_path: '{{ kuji_testnet.tls_local_path }}'
        tlsgen_key_name: '{{ kuji_testnet.tls_key_name }}'
        tlsgen_cert_name: '{{ kuji_testnet.tls_cert_name }}'
        tlsgen_ca_root_path: '{{ ca.prometheus.root_path }}'
        tlsgen_ca_root_key_name: '{{ ca.prometheus.root_key_name }}'
        tlsgen_ca_root_cert_name: '{{ ca.prometheus.root_cert_name }}'
        tlsgen_ca_secret_passphrase: '{{ ca.prometheus.secret_passphrase }}'
        tlsgen_common_name: '{{ kuji_testnet.ip }}'
        tlsgen_sans:
          - 'IP:{{ kuji_testnet.ip }}'

- name: Create node TLS dir
  hosts: kuji_testnet
  remote_user: '{{ kuji_testnet.username }}'
  become: yes
  tasks:
    - file:
        path: "{{ kuji_testnet.tls_remote_path }}"
        state: directory
        owner: root
        group: root
        mode: "u=rwx,g=rwx,o=rx"

- name: Transfer TLS files to remote
  hosts: kuji_testnet
  remote_user: '{{ kuji_testnet.username }}'
  become: yes
  tasks:
    - copy:
        src: "{{ item }}"
        dest: "{{ kuji_testnet.tls_remote_path }}"
        owner: root
        group: root
        mode: "u=rw,g=rw,o=r"
        force: yes
      with_items:
        - "{{ kuji_testnet.tls_local_path }}/{{ kuji_testnet.tls_cert_name }}"
        - "{{ kuji_testnet.tls_local_path }}/{{ kuji_testnet.tls_key_name }}"

- hosts: kuji_testnet
  remote_user: '{{ kuji_testnet.username }}'
  become: yes
  tasks:
    - import_role:
        name: nodexp
      vars:
        nodexp_security_config:
          tls_path: '{{ kuji_testnet.tls_remote_path }}'
          cert_file: '{{ kuji_testnet.tls_cert_name }}'
          key_file: '{{ kuji_testnet.tls_key_name }}'
          password: '{{ ansible_become_pass }}'

- hosts: kuji_testnet
  remote_user: '{{ kuji_testnet.username }}'
  become: yes
  tasks:
    - import_role:
        name: cosmosexp
      vars:
        cosmosexp_version: '0.3.6'
        cosmosexp_user: '{{ kuji_testnet.username }}'
        cosmosexp_args:
          bech-prefix: 'kujira'
          denom: 'kuji'
          denom-coefficient: '1000000'
        cosmosexp_security_config:
          tls_path: '{{ kuji_testnet.tls_remote_path }}'
          cert_file: '{{ kuji_testnet.tls_cert_name }}'
          key_file: '{{ kuji_testnet.tls_key_name }}'
          password: '{{ ansible_become_pass }}'
