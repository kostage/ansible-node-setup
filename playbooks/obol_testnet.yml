- hosts: obol_testnet
  name: Create user with password and ssh key
  remote_user: root
  tasks:
    - import_role:
        name: user
      vars:
        user_name: '{{ obol_testnet.username }}'
        user_password: "{{ obol_testnet.password | password_hash('sha512') }}"
        user_ssh_key_save_path: '{{ obol_testnet.sshkey_save_path }}'
        user_ssh_key_file: '.ssh/{{ obol_testnet.username }}_id_rsa'
  ignore_errors: yes
  ignore_unreachable: yes

- name: Evaluating the authentication agent & adding the key...
  hosts: localhost
  connection: local
  tasks:
    - import_role:
        name: sshadd
      vars:
        sshadd_key_path:  '{{ obol_testnet.sshkey_save_path }}/{{ obol_testnet.username }}_id_rsa'

- name: Tune SSH, install packages, golang, set FW
  hosts: obol_testnet
  remote_user: '{{ obol_testnet.username }}'
  become: yes
  vars:
    - ansible_become_password: '{{ obol_testnet.password }}'
  tasks:
    - import_role:
        name: apt
    - import_role:
        name: ssh
      vars:
        username: '{{ obol_testnet.username }}'
    - import_role:
        name: gantsign.golang
      vars:
        golang_gopath: '/home/{{ obol_testnet.username }}/go'
    - import_role:
        name: docker
      vars:
        docker_user: '{{ ovpn_server.username }}'
    - import_role:
        name: firewall
      vars:
        firewall_rules: '{{ obol_testnet.firewall_rules }}'

- name: Generate TLS cert
  hosts: localhost
  connection: local
  tasks:
    - import_role:
        name: tlsgen
      vars:
        tlsgen_path: '{{ obol_testnet.tls_local_path }}'
        tlsgen_key_name: '{{ obol_testnet.tls_key_name }}'
        tlsgen_cert_name: '{{ obol_testnet.tls_cert_name }}'
        tlsgen_ca_root_path: '{{ ca.prometheus.root_path }}'
        tlsgen_ca_root_key_name: '{{ ca.prometheus.root_key_name }}'
        tlsgen_ca_root_cert_name: '{{ ca.prometheus.root_cert_name }}'
        tlsgen_ca_secret_passphrase: '{{ ca.prometheus.secret_passphrase }}'
        tlsgen_common_name: '{{ obol_testnet.ip }}'
        tlsgen_sans:
          - 'IP:{{ obol_testnet.ip }}'

- name: Create node TLS dir
  hosts: obol_testnet
  remote_user: '{{ obol_testnet.username }}'
  become: yes
  vars:
    - ansible_become_password: '{{ obol_testnet.password }}'
  tasks:
    - file:
        path: '{{ obol_testnet.tls_remote_path }}'
        state: directory
        owner: root
        group: root
        mode: 'u=rwx,g=rwx,o=rx'

- name: Transfer TLS files to remote
  hosts: obol_testnet
  remote_user: '{{ obol_testnet.username }}'
  become: yes
  vars:
    - ansible_become_password: '{{ obol_testnet.password }}'
  tasks:
    - copy:
        src: '{{ item }}'
        dest: '{{ obol_testnet.tls_remote_path }}'
        owner: root
        group: root
        mode: 'u=rw,g=rw,o=r'
        force: yes
      with_items:
        - '{{ obol_testnet.tls_local_path }}/{{ obol_testnet.tls_cert_name }}'
        - '{{ obol_testnet.tls_local_path }}/{{ obol_testnet.tls_key_name }}'

- name: Install Node Exporter
  hosts: obol_testnet
  remote_user: '{{ obol_testnet.username }}'
  become: yes
  vars:
    - ansible_become_password: '{{ obol_testnet.password }}'
  tasks:
    - import_role:
        name: nodexp
      vars:
        nodexp_security_config:
          tls_path: '{{ obol_testnet.tls_remote_path }}'
          cert_file: '{{ obol_testnet.tls_cert_name }}'
          key_file: '{{ obol_testnet.tls_key_name }}'
          password: '{{ obol_testnet.password }}'
