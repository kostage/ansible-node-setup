# - hosts: kuji_mainnet
#   name: Create user with password and ssh key
#   remote_user: root
#   tasks:
#     - import_role:
#         name: user
#       vars:
#         user_name: '{{ kuji_mainnet.username }}'
#         user_password: "{{ kuji_mainnet.password | password_hash('sha512') }}"
#         user_ssh_key_save_path: '{{ kuji_mainnet.sshkey_save_path }}'
#         user_ssh_key_file: '.ssh/{{ kuji_mainnet.username }}_id_rsa'
#   ignore_errors: yes
#   ignore_unreachable: yes

# - name: Evaluating the authentication agent & adding the key...
#   hosts: localhost
#   connection: local
#   tasks:
#     - import_role:
#         name: sshadd
#       vars:
#         sshadd_key_path:  '{{ kuji_mainnet.sshkey_save_path }}/{{ kuji_mainnet.username }}_id_rsa'

# - name: Tune SSH, install packages, golang, set FW
#   hosts: kuji_mainnet
#   remote_user: '{{ kuji_mainnet.username }}'
#   become: yes
#   vars:
#     - ansible_become_password: '{{ kuji_mainnet.password }}'
#   tasks:
#     - import_role:
#         name: apt
#     - import_role:
#         name: ssh
#       vars:
#         username: '{{ kuji_mainnet.username }}'
#     - import_role:
#         name: gantsign.golang
#       vars:
#         golang_gopath: '/home/{{ kuji_mainnet.username }}/go'
#     - import_role:
#         name: firewall # also allow non-standard SSH port
#       vars:
#         firewall_rules: '{{ kuji_mainnet.firewall_rules }}'

# - name: Generate TLS cert
#   hosts: localhost
#   connection: local
#   tasks:
#     - import_role:
#         name: tlsgen
#       vars:
#         tlsgen_path: '{{ kuji_mainnet.tls_local_path }}'
#         tlsgen_key_name: '{{ kuji_mainnet.tls_key_name }}'
#         tlsgen_cert_name: '{{ kuji_mainnet.tls_cert_name }}'
#         tlsgen_ca_root_path: '{{ ca.prometheus.root_path }}'
#         tlsgen_ca_root_key_name: '{{ ca.prometheus.root_key_name }}'
#         tlsgen_ca_root_cert_name: '{{ ca.prometheus.root_cert_name }}'
#         tlsgen_ca_secret_passphrase: '{{ ca.prometheus.secret_passphrase }}'
#         tlsgen_common_name: '{{ kuji_mainnet.ip }}'
#         tlsgen_sans:
#           - 'IP:{{ kuji_mainnet.ip }}'

# - name: Create node TLS dir
#   hosts: kuji_mainnet
#   remote_user: '{{ kuji_mainnet.username }}'
#   become: yes
#   vars:
#     - ansible_become_password: '{{ kuji_mainnet.password }}'
#   tasks:
#     - file:
#         path: '{{ kuji_mainnet.tls_remote_path }}'
#         state: directory
#         owner: root
#         group: root
#         mode: 'u=rwx,g=rwx,o=rx'

# - name: Transfer TLS files to remote
#   hosts: kuji_mainnet
#   remote_user: '{{ kuji_mainnet.username }}'
#   become: yes
#   vars:
#     - ansible_become_password: '{{ kuji_mainnet.password }}'
#   tasks:
#     - copy:
#         src: '{{ item }}'
#         dest: '{{ kuji_mainnet.tls_remote_path }}'
#         owner: root
#         group: root
#         mode: 'u=rw,g=rw,o=r'
#         force: yes
#       with_items:
#         - '{{ kuji_mainnet.tls_local_path }}/{{ kuji_mainnet.tls_cert_name }}'
#         - '{{ kuji_mainnet.tls_local_path }}/{{ kuji_mainnet.tls_key_name }}'

# - hosts: kuji_mainnet
#   remote_user: '{{ kuji_mainnet.username }}'
#   become: yes
#   vars:
#     - ansible_become_password: '{{ kuji_mainnet.password }}'
#   tasks:
#     - import_role:
#         name: nodexp
#       vars:
#         nodexp_security_config:
#           tls_path: '{{ kuji_mainnet.tls_remote_path }}'
#           cert_file: '{{ kuji_mainnet.tls_cert_name }}'
#           key_file: '{{ kuji_mainnet.tls_key_name }}'
#           password: '{{ kuji_mainnet.password }}'

- hosts: kuji_mainnet
  remote_user: '{{ kuji_mainnet.username }}'
  become: yes
  vars:
    - ansible_become_password: '{{ kuji_mainnet.password }}'
  tasks:
    - import_role:
        name: cosmosexp
      vars:
        cosmosexp_version: '0.3.7'
        cosmosexp_user: '{{ kuji_mainnet.username }}'
        cosmosexp_args:
          bech-prefix: 'kujira'
          denom: 'kuji'
          denom-coefficient: '1000000'
        cosmosexp_security_config:
          tls_path: '{{ kuji_mainnet.tls_remote_path }}'
          cert_file: '{{ kuji_mainnet.tls_cert_name }}'
          key_file: '{{ kuji_mainnet.tls_key_name }}'
          password: '{{ kuji_mainnet.password }}'

#  now switch SSH to alternate port
# - hosts: kuji_mainnet
#   remote_user: "{{ kuji_mainnet.username }}"
#   become: yes
#   tasks:
#     - import_role:
#         name: ssh
#       vars:
#         sshd_options:
#           - option: Port
#             value: "{{ kuji_mainnet.ssh_port }}"

- hosts: kuji_mainnet
  remote_user: '{{ kuji_mainnet.username }}'
  vars:
    - ansible_become_password: '{{ kuji_mainnet.password }}'
  tasks:
    - import_role:
        name: cosmovisor
      vars:
        cosmovisor_version: '0.45.6'
        cosmovisor_user: '{{ kuji_mainnet.username }}'
        cosmovisor_daemon_home: '/home/{{ kuji_mainnet.username }}/.kujira'
        cosmovisor_daemon_name: 'kujirad'
